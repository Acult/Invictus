namespace = inv_building_events

# Military Buildings uses events 1-25

# Crumbling Fortress
inv_building_events.1 = {
    type = country_event
    title = inv_building_events.1.t
    desc = inv_building_events.1.desc
    picture = greek_states_path_6_event
    goto_location = scope:building_province

    trigger = {
        NOT = { has_variable = military_building_cooldown }
    	any_owned_province = {
    		num_of_fortress_building > 1
    		province_income < 3
    	}
    }

    immediate = {
        set_variable = {
            name = military_building_cooldown
            value = very_long_cooldown
        }
        save_owned_province = {
            limit = "num_of_fortress_building > 1 province_income < 3"
            scope = "building_province"
        }
    }

    option = {
        name = inv_building_events.1.a
    }
    option = {
        name = inv_building_events.1.b
    }
}

# Sabotaged Fortress
inv_building_events.2 = {
    type = country_event
    title = inv_building_events.2.t
    desc = inv_building_events.2.desc
    picture = greek_states_path_6_event
    goto_location = scope:building_province

    trigger = {
        NOT = { has_variable = military_building_cooldown }
    	any_owned_province = {
            num_of_fortress_building > 1
            OR = {
                province_unrest > 2
                any_neighbor_province = {
                    exists = owner
                    NOT = { owner = root }
                    owner = {
                        opinion = {
                            target = root
                            value < 25
                        }
                    }
                }
            }
    	}
    }

    immediate = {
        set_variable = {
            name = military_building_cooldown
            value = very_long_cooldown
        }
        save_owned_province = {
            limit = "
                num_of_fortress_building > 1
                OR = {
                    province_unrest > 2
                    any_neighbor_province = {
                        exists = owner
                        NOT = { owner = root }
                        owner = {
                            opinion = {
                                target = root
                                value < 25
                            }
                        }
                    }
                }
            "
            scope = "building_province"
        }
    }

    option = {
        name = inv_building_events.2.a
    }
    option = {
        name = inv_building_events.2.b
    }
}

# Local Fortifications Master
inv_building_events.3 = {
    type = country_event
    title = inv_building_events.3.t
    desc = inv_building_events.3.desc
    picture = greek_states_path_6_event
    goto_location = scope:building_province
    left_portrait = current_ruler
    right_portrait = scope:fort_guy

    trigger = {
        NOT = { has_variable = military_building_cooldown }
        any_owned_province = {
            num_of_fortress_building > 1
            governor_policy = borderlands
        }
    }

    immediate = {
        set_variable = {
            name = military_building_cooldown
            value = long_cooldown
        }
        save_owned_province = {
            limit = "num_of_fortress_building > 1 governor_policy = borderlands"
            scope = "building_province"
        }
        scope:building_province = {
            if = {
                limit = {
                    exists = holding_owner
                }
                save_scope_as = fort_guy
            }
            else_if = {
                limit = {
                    exists = governor
                    NOT = { governor = current_ruler }
                }
                save_scope_as = fort_guy
            }
            else = {
                root = {
                    create_character = {
                        female = no
                        good_finesse_trait_effect = yes
                        save_scope_as = fort_guy
                    }
                }
            }
        }
    }

    option = {
        name = inv_building_events.3.a
    }
    option = {
        name = inv_building_events.3.b
    }
}

# Fires at the Fort
inv_building_events.4 = {
    type = country_event
    title = inv_building_events.4.t
    desc = inv_building_events.4.desc
    picture = Event_fire_city

    goto_location = scope:burning_fort_province
    left_portrait = current_ruler
    right_portrait = scope:pyromaniac_adminitrator

    trigger = {
        NOT = { has_variable = military_building_cooldown }
        any_owned_province = {
            num_of_fortress_building > 1
            OR = {
                AND = {
                    exists = governor_or_ruler
                    governor_or_ruler = { has_trait = pyromaniac }
                }
                AND = {
                    exists = holding_owner
                    holding_owner = { has_trait = pyromaniac }
                }
            }
        }
    }

    immediate = {
        set_variable = {
            name = military_building_cooldown
            value = long_cooldown
        }
        save_owned_province = {
            limit = "
                OR = {
                    AND = {
                        exists = governor_or_ruler
                        governor_or_ruler = { has_trait = pyromaniac }
                    }
                    AND = {
                        exists = holding_owner
                        holding_owner = { has_trait = pyromaniac }
                    }
                }
            "
            scope = "burning_fort_province"
        }
        scope:burning_fort_province = {
            if = {
                limit = {
                    exists = holding_owner
                    holding_owner = { has_trait = pyromaniac }
                }
                save_scope_as = pyromaniac_adminitrator
            }
            else_if = {
                limit = {
                    exists = governor_or_ruler
                    governor_or_ruler = { has_trait = pyromaniac }
                }
                save_scope_as = pyromaniac_adminitrator
            }
        }
    }
    option = {
        name = inv_building_events.4.a
    }
    option = {
        name = inv_building_events.4.b
    }
}

# Impenetrable Defenses (fort ramparts)
inv_building_events.5 = {
    type = country_event
    title = inv_building_events.5.t
    desc = inv_building_events.5.desc
    picture = greek_seleucid_path_6_event
    goto_location = scope:building_province
    trigger = {
        NOT = { has_variable = military_building_cooldown }
        any_owned_province = {
            has_building = fortress_ramparts_building
        }
    }

    immediate = {
        set_variable = {
            name = military_building_cooldown
            value = long_cooldown
        }
        save_owned_province = {
            limit = "has_building = fortress_ramparts_building"
            scope = "building_province"
        }
    }

    option = {      
        name = inv_building_events.5.a
    }
    option = {      
        name = inv_building_events.5.b
    }
}

# Ramparts collapse
inv_building_events.6 = {
    type = country_event
    title = inv_building_events.6.t
    desc = inv_building_events.6.desc
    picture = greek_seleucid_path_6_event
    goto_location = scope:building_province

    trigger = {
        NOT = { has_variable = military_building_cooldown }
        any_owned_province = {
            has_building = fortress_ramparts_building
        }
    }

    immediate = {
        set_variable = {
            name = military_building_cooldown
            value = long_cooldown
        }
        save_owned_province = {
            limit = "has_building = fortress_ramparts_building"
            scope = "building_province"
        }
        ordered_pops_in_province = {
            max = 3
            order_by = pop_hapiness
            kill_pop = yes
        }
    }

    option = {      
        name = inv_building_events.6.a
    }
    option = {      
        name = inv_building_events.6.b
    }
}

# Favorable Conditions at Sea
inv_building_events.7 = {
    type = country_event
    title = inv_building_events.7.t
    desc = inv_building_events.7.desc
    picture = trade_port
    goto_location = scope:building_province

    trigger = {
        NOT = { has_variable = military_building_cooldown }
        any_owned_province = {
            num_of_port_building > 1
        }
    }

    immediate = {
        set_variable = {
            name = military_building_cooldown
            value = long_cooldown
        }
        save_owned_province = {
            limit = "num_of_port_building > 1"
            scope = "building_province"
        }
    }

    option = {      
        name = inv_building_events.7.a
    }
    option = {      
        name = inv_building_events.7.b
    }
}

# Breakdown in harbor management in [building_province]
inv_building_events.8 = {
    type = country_event
    title = inv_building_events.8.t
    desc = inv_building_events.8.desc
    picture = trade_port
    goto_location = scope:building_province
    left_portrait = scope:port_manager
    right_portrait = current_ruler

    trigger = {
        NOT = { has_variable = military_building_cooldown }
        any_owned_province = {
            num_of_port_building > 1
        }
    }

    immediate = {
        set_variable = {
            name = military_building_cooldown
            value = long_cooldown
        }
        save_owned_province = {
            limit = "num_of_port_building > 1"
            scope = "building_province"
        }
        scope:building_province = {
            if = {
                limit = {
                    exists = holding_owner
                }
                holding_owner = { save_scope_as = port_manager }
            }
            else = {
                create_character = {
                    female = no
                    good_popularity_trait_effect = yes
                    save_scope_as = port_manager
                }
            }
        }
    }

    option = {      
        name = inv_building_events.8.a
    }
    option = {      
        name = inv_building_events.8.b
    }
}

# Rat Infestation in the Port of [building_province]
inv_building_events.9 = {
    type = country_event
    title = inv_building_events.9.t
    desc = inv_building_events.9.desc
    picture = interesting_histories_greek_port
    
    goto_location = scope:building_province
    left_portrait = scope:port_manager
    right_portrait = current_ruler

    trigger = {
        NOT = { has_variable = military_building_cooldown }
        any_owned_province = {
            num_of_port_building > 1
            province_income < 3
        }
    }

    immediate = {
        set_variable = {
            name = military_building_cooldown
            value = long_cooldown
        }
        save_owned_province = {
            limit = "num_of_port_building > 1 province_income < 3"
            scope = "building_province"
        }
        scope:building_province = {
            if = {
                limit = {
                    exists = holding_owner
                }
                holding_owner = { save_scope_as = port_manager }
            }
            else = {
                create_character = {
                    female = no
                    bad_popularity_trait_effect = yes
                    save_scope_as = port_manager
                }
            }
        }
    }

    option = {      
        name = inv_building_events.9.a
    }
    option = {      
        name = inv_building_events.9.b
    }
}

# Expert Shipbuilders of [building_province]
inv_building_events.10 = {
    type = country_event
    title = inv_building_events.10.t
    desc = inv_building_events.10.desc
    picture = greek_antigonid_path_2_event
    goto_location = scope:building_province
    left_portrait = scope:port_manager
    right_portrait = current_ruler

    trigger = {
        NOT = { has_variable = military_building_cooldown }
        any_owned_province = {
            num_of_port_building > 1
            province_income < 3
        }
    }

    immediate = {
        set_variable = {
            name = military_building_cooldown
            value = long_cooldown
        }
        save_owned_province = {
            limit = "num_of_port_building > 1 province_income < 3"
            scope = "building_province"
        }
        scope:building_province = {
            if = {
                limit = {
                    exists = holding_owner
                }
                holding_owner = { save_scope_as = port_manager }
            }
            else = {
                create_character = {
                    female = no
                    good_finesse_trait_effect = yes
                    save_scope_as = port_manager
                }
            }
        }
    }

    option = {      
        name = inv_building_events.10.a
    }
    option = {      
        name = inv_building_events.10.b
    }
}

# Sails set Fire in the ports of [burning_port_province]
inv_building_events.11 = {
    type = country_event
    title = inv_building_events.11.t
    desc = inv_building_events.11.desc
    picture = Event_fire_city
    goto_location = scope:burning_port_province
    left_portrait = scope:pyromaniac_adminitrator
    right_portrait = current_ruler

    trigger = {
        NOT = { has_variable = military_building_cooldown }
        any_owned_province = {
            num_of_port_building >= 1
            OR = {
                AND = {
                    exists = governor_or_ruler
                    governor_or_ruler = { has_trait = pyromaniac }
                }
                AND = {
                    exists = holding_owner
                    holding_owner = { has_trait = pyromaniac }
                }
            }
        }
    }

    immediate = {
        set_variable = {
            name = military_building_cooldown
            value = long_cooldown
        }
        save_owned_province = {
            limit = "
                OR = {
                    AND = {
                        exists = governor_or_ruler
                        governor_or_ruler = { has_trait = pyromaniac }
                    }
                    AND = {
                        exists = holding_owner
                        holding_owner = { has_trait = pyromaniac }
                    }
                }
            "
            scope = "burning_port_province"
        }
        scope:burning_port_province = {
            if = {
                limit = {
                    exists = holding_owner
                    holding_owner = { has_trait = pyromaniac }
                }
                save_scope_as = pyromaniac_adminitrator
            }
            else_if = {
                limit = {
                    exists = governor_or_ruler
                    governor_or_ruler = { has_trait = pyromaniac }
                }
                save_scope_as = pyromaniac_adminitrator
            }
        }
    }

    option = {      
        name = inv_building_events.11.a
    }
    option = {      
        name = inv_building_events.11.b
    }
}

# Drunken rampage by the men at the barracks in [building_province]
inv_building_events.12 = {
    type = country_event
    title = inv_building_events.12.t
    desc = inv_building_events.12.desc
    picture = latin_tribal_path_4_event
    goto_location = scope:building_province
    trigger = {
        NOT = { has_variable = military_building_cooldown }
        any_owned_province = {
            has_building = barracks_building
            province_manpower_income >= 5 
        }
    }

    immediate = {
        set_variable = {
            name = military_building_cooldown
            value = long_cooldown
        }
        save_owned_province = {
            limit = "has_building = barracks_building province_manpower_income >= 5 "
            scope = "building_province"
        }
    }

    option = {      
        name = inv_building_events.12.a
    }
    option = {      
        name = inv_building_events.12.b
    }
}

# [governor_dude] training with the troops of [building_province]
inv_building_events.13 = {
    type = country_event
    title = inv_building_events.13.t
    desc = inv_building_events.13.desc
    picture = latin_roman_path_end_bonus_event
    goto_location = scope:building_province
    left_portrait = current_ruler
    right_portrait = scope:governor_dude
    trigger = {
        NOT = { has_variable = military_building_cooldown }
        any_owned_province = {
            has_building = barracks_building
            province_manpower_income >= 3
            exists = governor
            NOT = { governor = current_ruler }
            governor = {
                highest_skill = martial
                martial >= 8
            }
        }
    }

    immediate = {
        set_variable = {
            name = military_building_cooldown
            value = long_cooldown
        }
        save_owned_province = {
            limit = "has_building = barracks_building province_manpower_income >= 3 "
            scope = "building_province"
        }
        governor = { save_scope_as = governor_dude }
    }

    option = {      
        name = inv_building_events.13.a
    }
    option = {      
        name = inv_building_events.13.b
    }
}

# Highly respected soldier challenges governor of [building_province.GetGovernorship.GetName]
inv_building_events.14 = {
    type = country_event
    title = inv_building_events.14.t
    desc = inv_building_events.14.desc
    picture = latin_support_path_end_bonus_event
    
    goto_location = scope:building_province
    left_portrait = scope:badass_soldier
    right_portrait = scope:bitch_ass_governor

    trigger = {
        NOT = { has_variable = military_building_cooldown }
        any_owned_province = {
            has_building = barracks_building
            province_manpower_income >= 3
            exists = governor
            NOT = { governor = current_ruler }
            governor = {
                highest_skill = martial
                martial >= 8
            }
        }
    }

    immediate = {
        set_variable = {
            name = military_building_cooldown
            value = long_cooldown
        }
        save_owned_province = {
            limit = "has_building = barracks_building province_manpower_income >= 3 "
            scope = "building_province"
        }
        governor = { save_scope_as = bitch_ass_governor }
        create_character = {
            female = no
            positive_martial_trait_effect = yes
            add_martial = 2
            save_scope_as = badass_soldier
        }
    }

    option = {  # Let them fight   
        name = inv_building_events.14.a
    }
    option = {  # This "soldier" is out of line...have him executed
        name = inv_building_events.14.b
    }
}

# Barracks drills in [building_province] using new innovative methods
inv_building_events.15 = {
    type = country_event
    title = inv_building_events.15.t
    desc = inv_building_events.15.desc
    picture = greek_seleucid_path_2_event
    goto_location = scope:building_province

    trigger = {
        NOT = { has_variable = barracks_drill_event_happened }
        any_owned_province = {
            has_building = barracks_building
            province_manpower_income >= 3
        }
    }

    immediate = {
        set_variable = barracks_drill_event_happened
        save_owned_province = {
            limit = "has_building = barracks_building province_manpower_income >= 5 "
            scope = "building_province"
        }
    }

    option = {      
        name = inv_building_events.15.a
    }
    option = {      
        name = inv_building_events.15.b
    }
}

# Foundry of [building_province] is thriving
inv_building_events.16 = {
    type = country_event
    title = inv_building_events.16.t
    desc = inv_building_events.16.desc
    picture = north_african_army_path_4_event
    goto_location = scope:building_province

    trigger = {
        NOT = { has_variable = military_building_cooldown }
        any_owned_province = {
            has_building = foundry_building
            province_income >= 3
        }
    }

    immediate = {
        set_variable = {
            name = military_building_cooldown
            value = medium_cooldown
        }
        save_owned_province = {
            limit = "has_building = foundry_building province_income >= 3"
            scope = "building_province"
        }
    }

    option = {      
        name = inv_building_events.16.a
    }
    option = {      
        name = inv_building_events.16.b
    }
}

# [building_province] producing the finest arms/armour in [country]
inv_building_events.17 = {
    type = country_event
    title = inv_building_events.17.t
    desc = {
        first_valid = {
            triggered_desc = {
                trigger = { var:foundry_type = flag:weapons }
                desc = "inv_building_events.17.desc.1"
            }
            triggered_desc = {
                trigger = { var:foundry_type = flag:armour }
                desc = "inv_building_events.17.desc.2"
            }
        }
    }
    picture = latin_tribal_path_1_event
    goto_location = scope:building_province

    trigger = {
        NOT = { has_variable = military_building_cooldown }
        any_owned_province = {
            has_building = foundry_building
            province_income >= 3
        }
    }

    immediate = {
        hidden_effect = {
            random_list = {
                1 = {
                    set_variable = {
                        name = foundry_type
                        value = flag:weapons
                    }
                }
                1 = {
                    set_variable = {
                        name = foundry_type
                        value = flag:armour
                    }
                }
            }
        }
        set_variable = {
            name = military_building_cooldown
            value = medium_cooldown
        }
        save_owned_province = {
            limit = "has_building = foundry_building province_income >= 3"
            scope = "building_province"
        }
    }

    option = {      
        name = inv_building_events.17.a
    }
    option = {      
        name = inv_building_events.17.b
    }
    after = {
        remove_variable = foundry_type
    }
}

# Slaves kill foundry master in [building_province]
inv_building_events.18 = {
    type = country_event
    title = inv_building_events.18.t
    desc = inv_building_events.18.desc
    picture = proscription
    goto_location = scope:building_province
    right_portrait = scope:murdered_master
    left_portrait = current_ruler
    trigger = {
        NOT = { has_variable = military_building_cooldown }
        any_owned_province = {
            has_building = foundry_building
            num_of_slaves >= 5
        }
    }

    immediate = {
        set_variable = {
            name = military_building_cooldown
            value = very_long_cooldown
        }
        save_owned_province = {
            limit = "has_building = foundry_building num_of_slaves >= 5"
            scope = "building_province"
        }
        hidden_effect = {
            create_character = {
                female = no
                save_scope_as = murdered_master
            }
        }
        scope:murdered_master = {
            death = {
                death_reason = death_decapitated
            }
        }
    }

    option = {      
        name = inv_building_events.18.a
    }
    option = {      
        name = inv_building_events.18.b
    }
}


# End of Military Buildings, some room for more if needed

# Economical / Management Buildings uses events 26-45

# Leaky Aqueducts in [building_province]
inv_building_events.26 = {
    type = country_event
    title = inv_building_events.26.t
    desc = inv_building_events.26.desc
    picture = aqueducts
    right_portrait = scope:aqueduct_governor

    trigger = {
        NOT = { has_variable = economy_building_cooldown }
        any_owned_province = {
            num_of_aqueduct_building >= 2
            province_unrest > 2
        }
        exists = governor_or_ruler
    }

    immediate = {
        set_variable = {
            name = economy_building_cooldown
            value = long_cooldown
        }
        save_owned_province = {
            limit = "num_of_aqueduct_building >= 2 province_unrest > 2"
            scope = "building_province"
        }
        scope:building_province.governor_or_ruler = { save_scope_as = aqueduct_governor }
    }

    option = {      
        name = inv_building_events.26.a
    }
    option = {      
        name = inv_building_events.26.b
    }
}

# Aqueducts in [building_province] have been sabotaged!
inv_building_events.27 = {
    type = country_event
    title = inv_building_events.27.t
    desc = inv_building_events.27.desc
    picture = aqueducts
    
    trigger = {
        NOT = { has_variable = economy_building_cooldown }
        any_owned_province = {
            num_of_aqueduct_building >= 2
            province_unrest > 2
        }
    }

    immediate = {
        set_variable = {
            name = economy_building_cooldown
            value = long_cooldown
        }
        save_owned_province = {
            limit = "num_of_aqueduct_building >= 2 province_unrest > 2"
            scope = "building_province"
        }
        while = {
            limit = {
                scope:building_province = {
                    has_building = aqueduct_building
                }
            }
            remove_building_level = aqueduct_building
        }
    }

    option = {      
        name = inv_building_events.27.a
    }
    option = {      
        name = inv_building_events.27.b
    }
}